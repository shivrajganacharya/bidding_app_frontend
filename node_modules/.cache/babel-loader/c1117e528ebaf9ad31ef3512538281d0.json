{"ast":null,"code":"var _jsxFileName = \"/home/shivraj/Projects/react-redux-hooks-jwt-auth-master/src/components/ShowItems.js\";\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useFetch } from '../custom-hooks/useFetch'; // import './indexelements.js';\n\nimport { history } from '../helpers/history'; // ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\n//const url = 'http://localhost:8085/getAllItems'\n//every time props or state changes, component re-renders\n// const calculateMostExpensive = (data) => {\n//   return (\n//     data.reduce((total, item) => {\n//       const price = item.base_price\n//       if (price >= total) {\n//         total = price\n//       }\n//       return total\n//     }, 0) / 100\n//   )\n// }\n\nconst ShowItems = ({\n  url\n}) => {\n  console.log(url);\n  const {\n    products\n  } = useFetch(url);\n  const [count, setCount] = useState(0); //const [cart, setCart] = useState(0)\n  // const addToCart = useCallback(() => {\n  //   setCart(cart + 1)\n  // }, [cart])\n  // const mostExpensive = useMemo(() => calculateMostExpensive(products), [\n  //   products,\n  // ])\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Count : \", count), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"click me\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Most Expensive : $\"), /*#__PURE__*/React.createElement(BigList, {\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst BigList = React.memo(({\n  products\n}) => {\n  useEffect(() => {\n    console.count('hello from big list');\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, products.map(product => {\n    return /*#__PURE__*/React.createElement(SingleProduct, {\n      key: product.item_id //{...product}\n      ,\n      index: product.item_id,\n      item_name: product.item_name,\n      base_price: product.base_price,\n      description: product.description // addToCart={addToCart}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    });\n  }));\n});\n\nconst SingleProduct = ({\n  index,\n  item_name,\n  base_price,\n  description\n}) => {\n  //let { name, price } = fields\n  //base_price = base_price / 100\n  //const image = fields.image[0].url\n  // console.log(index);\n  function postitem() {\n    //console.log(\"Inside Function Call\");\n    //console.log(index);\n    // let p='/additem/?id=' + index;\n    history.push(\"/home\");\n  } // useEffect(() => {\n  //   console.count('hello from product');\n  // });\n\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: item_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, item_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"$\", base_price), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"$\", description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postitem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Post Your Item\"));\n};\n\nexport default ShowItems;","map":{"version":3,"sources":["/home/shivraj/Projects/react-redux-hooks-jwt-auth-master/src/components/ShowItems.js"],"names":["React","useState","useCallback","useMemo","useFetch","history","ShowItems","url","console","log","products","count","setCount","BigList","memo","useEffect","map","product","item_id","item_name","base_price","description","SingleProduct","index","postitem","push"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react'\nimport  { useFetch } from '../custom-hooks/useFetch'\n// import './indexelements.js';\nimport { history } from '../helpers/history';\n\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\n//const url = 'http://localhost:8085/getAllItems'\n\n//every time props or state changes, component re-renders\n// const calculateMostExpensive = (data) => {\n//   return (\n//     data.reduce((total, item) => {\n//       const price = item.base_price\n//       if (price >= total) {\n//         total = price\n//       }\n//       return total\n//     }, 0) / 100\n//   )\n// }\nconst ShowItems = ({url}) => {\n  console.log(url);\n  const { products } = useFetch(url)\n  const [count, setCount] = useState(0)\n  //const [cart, setCart] = useState(0)\n\n   \n  // const addToCart = useCallback(() => {\n  //   setCart(cart + 1)\n  // }, [cart])\n\n  // const mostExpensive = useMemo(() => calculateMostExpensive(products), [\n  //   products,\n  // ])\n  return (\n    <>\n      <h1>Count : {count}</h1>\n      <button className='btn' onClick={() => setCount(count + 1)}>\n        click me\n      </button>\n      {/* <h1 style={{ marginTop: '3rem' }}>cart : {cart}</h1> */}\n      <h1>Most Expensive : ${}</h1>\n      <BigList products={products}/>\n    </>\n  )\n}\n\nconst BigList = React.memo(({ products}) => {\n  useEffect(() => {\n    console.count('hello from big list');\n  });\n\n  return (\n    <section className='products'>\n      {products.map((product) => {\n        return (\n          <SingleProduct\n            key={product.item_id}\n            //{...product}\n            index={product.item_id}\n            item_name= {product.item_name}\n           base_price ={product.base_price}\n           description= {product.description}\n           // addToCart={addToCart}\n          ></SingleProduct>\n        )\n      })}\n    </section>\n  )\n})\n\nconst SingleProduct = ({ index,item_name,base_price,description}) => {\n  //let { name, price } = fields\n  //base_price = base_price / 100\n  //const image = fields.image[0].url\n // console.log(index);\n\n  function postitem ()\n   {\n     //console.log(\"Inside Function Call\");\n     //console.log(index);\n     // let p='/additem/?id=' + index;\n     history.push(\"/home\");\n   }\n  // useEffect(() => {\n  //   console.count('hello from product');\n  // });\n  return (\n    <article className='product'>\n      <img src=\"\" alt={item_name} />\n      <h4>{item_name}</h4>\n      <p>${base_price}</p>\n      <p>${description}</p>\n      <button onClick={postitem}>Post Your Item</button>\n    </article>\n  )\n}\nexport default ShowItems"]},"metadata":{},"sourceType":"module"}